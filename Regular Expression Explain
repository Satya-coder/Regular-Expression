.......................................................................................................................
                                        What is Regular expression?
.......................................................................................................................

Regular Expression is a sequence of charecters to find,replace and search the pattern in strings or files.
Regular expression itself is a programming language.
In Python re module help with regular expression.
          Ex: import re
Most common uses of Regular Expression:

1. Search a string
2. Find a string
3. Splitting a string
4. Replace a string
........................................................................................................................
                                        Various method of remodule
........................................................................................................................

1. re.match(): match a regular expression pattern to the beginning of a string
2. re.search() : Search a string for the presence of a pattern.
3. re.findall(): Find all occurrences of a pattern in a string.
4. re.split(): Split a string by the occurrences of a pattern.
5. re.sub(): Substitute occurrences of a pattern found in a string.
6. re.compile(): Compile a pattern into a RegexObject.

1. Search a string:
----------------------------

Ex1:import re
    s="Hello welcome to python and python is good"
    search_word=re.search(r"welcome",s)
    print(search.group(0))
o/p- welcome

Ex2: import re
     s="Hello welcome to python and python is good"
     Match=re.match(r'Hello',s)
     print(Match.group())     #o/p-Hello
     print(Match.start())     #o/p-0
     print(Match.end())       #o/p-5

2. Find a string:
----------------------------

Ex1: import re
     pattern=re.compile('iProgram')
     result=pattern.findall('Welcome to iProgram. Its fun to learn python on iProgram')
     print(result)
     
o/p-> ['iProgram', 'iProgram']

3. Spliting a string:
----------------------------

Ex1: import re
     s="Hello welcome to python and python is good"
     result=re.split('o',s)
     print(result)
O/P-> ['Hell', ' welc', 'me t', ' pyth', 'n and pyth', 'n is g', '', 'd']

Ex2: import re
     s="Hello welcome to python and python is good"
     result=re.split('o',s,maxsplit=2)
     print(result)
O/P-> ['Hell', ' welc', 'me to python and python is good']

4. Replace a string:
---------------------------

Ex1: 
     s="Hello welcome to python and python is good"
     replace_string=s.replace('python','java')
     print(replace_string)
     
Ex2: Using regular expression
     import re
     s = "Hello Everyone welcome to xProgram. Fun to learn python on xProgram"
     result=re.sub('xProgram','iProgram',s)
     print(result)
===================================================================================================
                                        Special charecters
===================================================================================================

^-----------------------------Strating

$----------------------------Ending

[ ]-----------------------Matches any single character in brackets

[^ ]---------------------Not Match any single Character in brackets

\w-----------------------word (a-zA-Z0-9_)

\W-----------------------Non word(.!*%@)

\s------------------------Matches Whitespaces  equivalent to [\t\n\r]

\S-----------------------Not Match Whitespaces

\d-----------------------Matches digit

\D---------------------Not Match digit

\A---------------------Match begining of String

\z---------------------Match ending of String

\b--------------------Match Boundries 

\n--------------------Match Newline

\t--------------------Match tab

*---------------------0 or more occurrences of the pattern on it's left

?---------------------Match 0 or 1 occurrences of the pattern on it's left
=======================================================================================================
                                        Programs
=======================================================================================================
Ex1: import re
     list='567-891-1'
     pattern=re.compile(r'(\d\d\d)-(\d\d\d-\d)')
     result=pattern.search(list)
     print(result.group(0))
O/P-> 567-891-1
.......................................................................................................
Ex2: Find the digit value from the string?
     import re
     s='gro34u45p'
     match=re.sub(r'\D','',s)
     print(match)
O/P->3445
.......................................................................................................
Ex3: WAP to set strong password for Email

import re

email_id=re.compile(r'\w+[.]\w+@\w+[.]\w+')
capregex=re.compile(r'.*[A-Z].*')
lowregex=re.compile(r'.*[a-z].*')
digitregex=re.compile(r'.*\d.*')
def checkemailid(email):
    if email_id.search(email):
        print("email:correct pattern")

    else:
        print("parameter is missing from email")

def checkpassword(text):
    if capregex.search(text) and lowregex.search(text) and digitregex.search(text):
        print("check the password pattern")
        if len(pattern)<8:
            print("password need to be at least 8 charecter")
        else:
            print("Password satisfies the length")

    else:
        print("it should match with password pattern")


email_pattern='satya.behera@gmail.com'
checkemailid(email_pattern)

pattern="Kelvin@123"
checkpassword(pattern)
..............................................................................................................
EX4: Find ab position from this program

s='abaabaabaa'
matcher=re.finditer('ab',s)
for match in matcher:
    print(match.start(),'.....',match.group(0))
    
O/P-> 0 ..... ab
      3 ..... ab
      6 ..... ab
................................................................................................................
Ex5: Write a Python program that matches a word at the beginning of a string?
import re
def match_word(string):
    pattern=re.compile(r'\w+')
    match=pattern.match(string)
    if match:
        print("matched")
    else:
        print("Not matched")
match_word("The quick brown fox jumps over the lazy dog")
match_word(" The quick brown fox jumps over the lazy dog")

O/P->matched
     Not matched
      
      
    
